1) Deletion in Binary trees

2) inorder traversal

3) postorder traversal

4) preorder traversal

5) level order traversal //can see another method if you want

6) Reverse level order traversal

7) Height of a tree

8) Mirror of a tree

9) Check if Binary tree is balanced or not

10) Max and min element in Binary Tree


11) Vertical Traversal of Binary Tree 

11a) vertical sum

12) Top view of Binary tree

13) Bottom view of Binary Tree

14) left view of BT

15) level order traversal in spiral form 

16)

17)

18) Construct tree from inorder and preorder

19) Add all greater values to every node in a BST

20)

21) Write a function that returns true if the given Binary Tree of size N is SumTree else return false. A SumTree is a Binary Tree in which value of each node x is equal to sum of nodes present in its left subtree and right subtree . An empty tree is SumTree and sum of an empty tree can be considered as 0. A leaf node is also considered as SumTree.

22) Transform to sum tree
    Given a Binary Tree of size N , where each node has positive and negative values. Convert this to a tree where each node contains the sum of the left and right sub trees in the original tree. The values of leaf nodes are changed to 0.

23) Max Level Sum in Binary Tree 

24) check if binart tree is full binary tree    

25) Determine if Two Trees are Identical

26) Given a Binary Tree. Check whether it is Symmetric or not, i.e. whether the binary tree is a Mirror image of itself or not.

27) Leftmost and rightmost nodes of binary tree

28) Extreme nodes in alternate order

29) Two Mirror Trees

30) Check if Tree is IsomorphicYou don't need to read input or print anything. Your task is to complete the function isIsomorphic() that takes the root nodes of both the Binary Trees as its input and returns True if the two trees are isomorphic. Else, it returns False.

31) Given a Binary Tree of size N. Find the sum of all the leaf nodes that are left child of their parent of the given binary tree.


## 32)Level of a Node in Binary Tree ( see that extra line before adding null)

33) level with max no of nodes

34) Maximum Width of Tree

35) Print all nodes that don't have sibling

36) Sum of Leaf Nodes at Min Level

37)Leaf at same level

##38) connect nodes at same level (check the better sol also)

39) Root to leaf path sum

40) Ancestors in Binary Tree

41) lowest common ancestor in binary tree

42) kth ancestor of binary tree

43) ZigZag Tree Traversal/ spiral tree traversal

 ## 44) Binary Tree to DLL

 45) Given a simple expression tree, which is also a full binary tree consisting of basic binary operators i.e., + , â€“ ,* and / and some integers, Your task is to evaluate the expression tree.

 46) convert ternary expression into binary tree