1) count the nodes

2) #Get the middle node

3) Delete Alternate nodes

4) length of the linked list is even or odd

5) Identical Linked Lists

6) print list

# 7) insert at beg and end (rem to take temp while traversing for insertion in end to prevent null pointer exception)

8) nth node

9) Given a Matrix mat of N*N size, the task is to complete the function constructLinkedMatrix(), that constructs a 2D linked 
   list representation of the given matrix.

10) Given a singly linked list and a key, count number of occurrences of given key in linked list. For example, if given 
    linked list is 1->2->1->2->1->3->1 and given key is 1, then output should be 4.

11) Delete the middle element of the linked list.

12) Merge two sorted linked lists

13) Given a linked list of N nodes where nodes can contain values 0s, 1s and 2s only. The task is to segregate 0s, 1s and 2s linked list such that all zeros segregate to headside, 2s at the end of the linked list and 1s in the mid of 0s and 2s.

14) Count Pairs whose sum is equal to X

15) Remove duplicates from an unsorted linked list
15 b)  Remove duplicates from an sorted linked list

16) Deleting a node without head pointer but can't be the last node

17) Reverse a linked list

18) Nth node from end of linked list

19) Intersection Point in Y Shapped Linked Lists

20) Reverse a Linked List in groups of given size.

21) Given a singly linked list, group all odd nodes together followed by the even nodes. Please note here we are talking about the node number and not the value in the nodes.

You should try to do it in place. The program should run in O(1) space complexity and O(nodes) time complexity.

22) union of 2 linkedlist

23) insertion in sorted list

### 24) Find the length of the loop

 ## 25) Delete a Node in Single Linked List


 ### 26) merge sort on linked list

 27) Merge 2 sorted linked list in reverse order

 28) detect a loop 

 29) Pairwise swap elements of a linked list 
 29 b) Swap Kth nodes from ends

 30) Delete all occurences of a keys in a Linked list 

 31)Add 1 to a number represented as linked list

 32)Linked List in Zig-Zag fashion

 33) check if linkedlist is circular

 34) Given a Cirular Linked List split it into two halves circular lists. If there are odd number of nodes in the given circular linked list then out of the resulting two halved lists, first list should have one node more than the second list. The resultant lists should also be circular lists and not linear lists.

 35)